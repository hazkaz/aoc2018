(defun in (val list)
  (if (eq (car list) val) T (if (eq (cdr list) NIL) NIL (in val (cdr list)))))
(let (
      (total 0)
      (data (mapcar #'parse-integer (uiop:read-file-lines "test.input")))
      (n 0)
      (existing NIL)
      )
  (loop for num = (nth n data)
     while (not (in total existing)) do (progn
				    (cons existing total) 
				    (setf total (+ total num))
				    (setf n (+ 1 n))
				    (setf n (mod  n (list-length data)))))
       (format t "~A~%" total))
